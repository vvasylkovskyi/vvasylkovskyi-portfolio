@import './variables.scss';

$code-value-color: var(--primary-color);

table {
  width: 100%;
  border-collapse: collapse;
  margin: 1rem 0;
  font-size: 0.95rem;
  background-color: var(--background-code-color);
  border: 1px solid var(--background-code-border-color);
  border-radius: $radii-md;
  overflow: hidden;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);

  span,
  td,
  tr {
    color: var(--primary-code-text-color);
  }

  thead {
    background-color: var(--background-code-color);
    font-weight: 600;
  }

  th,
  td {
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid var(--background-code-border-color);
    cursor: pointer;
  }

  th:first-child,
  td:first-child {
    width: 35%;
    white-space: nowrap;
  }

  tr:last-child td {
    border-bottom: none;
  }

  tr:hover {
    background-color: var(--hover-table-row-background-color);
  }
}

pre {
  background-color: var(--background-code-color);
  /* Light grey background */
  border: 1px solid var(--background-code-border-color);
  /* Define a border */
  border-radius: $radii-md;
  padding: 10px;
  /* Inner spacing */
  overflow-x: hidden;
  /* Allow horizontal scrolling if necessary */
  margin: 10px 0;
  width: 100%;

  span,
  td,
  tr {
    color: var(--primary-code-text-color);
  }
}

.hljs.html {
  color: var(--primary-code-text-color);
}

.hljs.javascript,
.hljs.patch {
  color: var(--primary-code-text-color);

  .hljs-comment {
    color: #6a9955;
  }

  .language_ {
    color: #4ec9b0;
  }

  .hljs-property {
    color: #4ec9b0;
  }

  .hljs-attr {
    color: #9cdcfe;
  }

  .hljs-string {
    color: $code-value-color;
  }

  .hljs-regexp {
    color: #cc6666;
  }

  .hljs-literal {
    color: #569cd6;
  }

  .hljs-title.function_ {
    color: #d7ba7d;
  }

  .hljs-variable.constant_ {
    color: #4ec9b0;
  }

  .hljs-number {
    color: #b5cea8;
  }

  .hljs-keyword {
    color: #569cd6;
  }

  .hljs-title.class_ {
    color: #4ec9b0;
  }

  .hljs-subst {
    color: #9cdcfe;
  }

  .hljs-params {
    color: #9cdcfe;
  }

  .hljs-property {
    color: #d4d4d4;
  }
}

.hljs.typescript,
.hljs.py,
.hljs.python {
  color: #d4d4d4;

  .hljs-comment {
    color: #6a9955;
  }

  .hljs-property {
    color: #d4d4d4;
  }

  .hljs-variable.constant_ {
    color: #4ec9b0;
  }

  .hljs-keyword {
    color: #569cd6;
  }

  .hljs-built_in {
    color: #d7ba7d;
  }

  .hljs-string {
    color: $code-value-color;
  }

  .function_ {
    color: #d7ba7d;
  }

  .hljs-attr {
    color: #9cdcfe;
  }

  .hljs-variable {
    color: #9cdcfe;
  }

  .hljs-number {
    color: #b5cea8;
  }

  .hljs-title.class_ {
    color: #4ec9b0;
  }

  .hljs-subst {
    color: #9cdcfe;
  }
}

.hljs.html {
  .hljs-meta {
    color: #569cd6;
  }

  .hljs-attr {
    color: #9cdcfe;
  }

  .hljs-keyword {
    color: #9cdcfe;
  }

  .hljs-tag {
    color: #d4d4d4;
  }

  .hljs-name {
    color: #569cd6;
  }

  .hljs-string {
    color: $code-value-color;
  }

  .hljs-comment {
    color: #608b4e;
  }

  .language-css {
    color: #d4d4d4;

    .hljs-selector-class {
      color: #d7ba7d;
    }

    .hljs-comment {
      color: #6a9955;
    }

    .hljs-keyword {
      color: #c586c0;
    }

    .hljs-attribute {
      color: #9cdcfe;
    }

    .hljs-built_in {
      color: #dcdcaa;
    }

    .hljs-string {
      color: $code-value-color;
    }

    .hljs-selector-tag {
      color: #d7ba7d;
    }
  }
}

.hljs.css {
  color: #d4d4d4;

  .hljs-comment {
    color: #6a9955;
  }

  .hljs-keyword {
    color: #c586c0;
  }

  .hljs-attribute {
    color: #9cdcfe;
  }

  .hljs-built_in {
    color: #dcdcaa;
  }

  .hljs-string {
    color: $code-value-color;
  }

  .hljs-selector-tag {
    color: #d7ba7d;
  }

  .hljs-number {
    color: #b5cea8;
  }
}

.hljs.json {
  color: #d4d4d4;

  .hljs-comment {
    color: #608b4e;
  }

  .hljs-punctuation {
    color: #d4d4d4;
  }

  .hljs-attr {
    color: #9cdcfe;
  }

  .hljs-string {
    color: $code-value-color;
  }

  .hljs-keyword {
    color: #569cd6;
  }
}

.hljs.yml {
  .hljs-attr {
    color: #569cd6;
  }

  .hljs-string {
    color: $code-value-color;
  }
}

.hljs.bash,
.hljs.txt,
.hljs.sh {
  color: #d4d4d4;

  .hljs-comment {
    color: #6a9955;
  }
}

.hljs.sh {
  .hljs-keyword {
    color: #9cdcfe;
  }

  .hljs-string {
    color: $code-value-color;
  }
}

.hljs.jsx {
  color: #d4d4d4;

  .hljs-comment {
    color: #6a9955;
  }

  .hljs-keyword {
    color: #c586c0;
  }

  .hljs-title.class_ {
    color: #9cdcfe;
  }

  .hljs-title.function_ {
    color: #d7ba7d;
  }

  .hljs-variable {
    color: #9cdcfe;
  }

  .hljs-string {
    color: $code-value-color;
  }

  .language-xml {
    .hljs-tag {
      color: #d4d4d4;
    }

    .hljs-name {
      color: #4ec9b0;
    }

    .hljs-attr {
      color: #9cdcfe;
    }
  }
}

.hljs.sql {
  color: #d4d4d4;


  .hljs-comment {
    color: #608b4e;
  }

  .hljs-keyword,
  .hljs-type {
    color: #569cd6;
  }
}

.hljs.dockerfile,
.hljs.tf,
.hljs.tfvars,
.hljs.hcl {
  color: #4ec9b0;

  .hljs-comment {
    color: #608b4e;
  }

  .hljs-keyword {
    color: #c586c0;
  }

  .language-bash {
    color: #9cdcfe;
  }

  .hljs-string {
    color: $code-value-color;
  }

  .hljs-number {
    color: #b5cea8;
  }
}

p>code,
li>code,
strong>code,
h2>code {
  background: var(--background-code-inline-color);
  color: var(--primary-color);
}

code {
  // font-family: 'Courier New', Courier, monospace; /* Monospace font for the consistency of code styling */
  font-family: Menlo, 'IBM Plex Mono', Menlo, monospace;
  color: #333;
  /* Slightly darker text color for better readability */
  white-space: pre-wrap;
  /* This will wrap texts to the next line while preserving white spaces and line breaks */
  word-break: break-all;
  /* This will break a word in half if it's too long for its container */
  overflow-wrap: break-word;
  /* Similar to word-break but it tries to break on word boundaries */
}

/* Specific style adjustments for 'sh' or 'bash' scripting to distinguish it */
/* This requires a way to specifically target the shell script blocks. It often depends on how the HTML is structured by your markdown-to-HTML process. */
code.lang-shell {
  /* You can customize this part specifically for shell scripts */
  /* For example, you might want a specific icon or a slightly different shade of background color */
  /* Background color could be slightly different from other code blocks */
  background-color: #e8e8e8;
}